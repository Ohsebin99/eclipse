package com.tjoeun.mycalendar;

import java.io.IOException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class SolaToLunar {
	
//	월별 양력과 음력을 크롤링하고 양력, 음력 공휴일을 계산해서 리턴하는 메소드
	public static void solaToLunar(int year, int month) {
		
		String targetSite = "";
		
		// 인수로 넘겨받은 year에 해당되는 열두 달의 양력에 대응되는 음력을 크롤링
		for(int i=1; i<=12; i++) {
			targetSite = 
				String.format("https://astro.kasi.re.kr/life/pageView/5?search_year=%04d&search_month=%02d&search_check=J",
						year, i);
			// System.out.println(targetSite);
			
			// 크롤링한 데이터를 기억할 org.jsoup.nodes 패키지의 Document 클래스 객체를 선언한다.
			Document document = null;
			
			// org.jsoup 패키지의 Jsoup 클래스의 connect() 메소드로 크롤링할 타겟 사이트에 접속하고 get()
			// 메소드로 타겟 사이트의 정보를 얻어온다.
			try {
				document = Jsoup.connect(targetSite).get();
				
				// Document 클래스 객체에 저장된 타겟 사이트의 정보 중에서 날짜(<tr>) 단위로 얻어온다.
				
				Elements  elements = document.select("tbody > tr");
				
				// Elements 클래스 객체에는 크롤링된 전체 패키지
				for(Element element : elements) {
					System.out.println(element);
					System.out.println("=============================================================");
					Elements ele = element.select("td");
				//	System.out.println(ele);
					String sola = ele.get(0).text();
					String lunar = ele.get(1).text();
				//	System.out.println(String.format("양력 %s은 음력으로 %s 입니다.", sola, lunar));
					// 크롤링 끝
					
					// 크롤링한 결과를 LunarDate 클래스 객체에 저장한다.
					LunarDate lunarDate = new LunarDate();
					// split() 메소드는 인수로 지정한 구분자로 문자열을 나눠서 배열로 리턴한다.
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	
}































